{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","floodPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","canvas","player","move_display","Label","scoreAudio","AudioClip","spawnInterval","rows","colours","onLoad","groundY","y","height","timer","starDuration","spawnCount","numberToSpawn","initialize","create_table","score","finished","limit_moves","moves","start_table","Color","BLUE","RED","GREEN","YELLOW","ORANGE","MAGENTA","row","game_table","col","colour","flooded","element","random_colour","colour_no","Math","floor","random","flood_element","color","flood_neighbours","test_colour_flood","equals","all_flooded","flood","initial","old_colour","max_moves","log","star","spawnNewStarByNum","spawnAllStars","i","j","inum","newcolour","newStar","instantiate","node","addChild","starWidth","width","marginX","marginy","x","ynum","pos","v2","setPosition","getComponent","game","spawnNewStar","getNewStarPosition","parseInt","update","dt","updateMoves","string","gainScore","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAERC,qBAAa;AACTC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA,SAFL;AAMRC,yBAAiB,CANT;AAORC,yBAAiB,CAPT;AAQRC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SARA;AAYRC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAZA;AAgBRE,gBAAQ;AACJR,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAhBA;AAoBRG,sBAAc;AACVT,qBAAS,IADC;AAEVC,kBAAMP,GAAGgB;AAFC,SApBN;AAwBRC,oBAAY;AACRX,qBAAS,IADD;AAERC,kBAAMP,GAAGkB;AAFD,SAxBJ;AA4BRC,uBAAe,CA5BP;AA6BRC,cAAM,CA7BE;AA8BRC,iBAAQ;AA9BA,KAHP;;AAoCLC,YAAQ,kBAAY;;AAEhB,aAAKC,OAAL,GAAe,KAAKZ,MAAL,CAAYa,CAAZ,GAAgB,KAAKb,MAAL,CAAYc,MAAZ,GAAmB,CAAlD;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,UAAL,GAAkB,CAAlB;AACA,aAAKC,aAAL,GAAqB,KAAKT,IAAL,GAAY,KAAKA,IAAtC;;AAEA,aAAKU,UAAL;AACA,aAAKC,YAAL;;AAEA,aAAKC,KAAL,GAAa,CAAb;AACH,KAhDI;;AAkDLF,gBAAY,sBACZ;AACI,aAAKG,QAAL,GAAgB,KAAhB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,WAAL,GAAmB,EAAnB;;AAEA,aAAKf,OAAL,GAAe,CAACrB,GAAGqC,KAAH,CAASC,IAAV,EAAgBtC,GAAGqC,KAAH,CAASE,GAAzB,EAA6BvC,GAAGqC,KAAH,CAASG,KAAtC,EAA4CxC,GAAGqC,KAAH,CAASI,MAArD,EAA4DzC,GAAGqC,KAAH,CAASK,MAArE,EAA4E1C,GAAGqC,KAAH,CAASM,OAArF,CAAf;AACA,aAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC,EAA0C;AACtC,iBAAKR,WAAL,CAAiBQ,GAAjB,IAAwB,EAAxB;AACH;;AAED,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAK,IAAID,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC,EAA0C;AACtC,iBAAKC,UAAL,CAAgBD,GAAhB,IAAuB,EAAvB;AACA,iBAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAM,KAAK1B,IAA7B,EAAmC0B,KAAnC,EAA0C;AACtC,qBAAKD,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,IAA4B;AACxBC,4BAAQ,IADgB;AAExBC,6BAAS,KAFe;AAGxBC,6BAAS;AAHe,iBAA5B;AAKH;AACJ;AAEJ,KA1EI;;AA4ELC,mBAAe,yBACf;AACI,YAAIC,YAAYC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAiB,CAA7B,CAAhB;AACA,eAAO,KAAKjC,OAAL,CAAa8B,SAAb,CAAP;AACH,KAhFI;;AAkFLI,mBAAe,uBAAUX,GAAV,EAAeE,GAAf,EAAoBC,MAApB,EACf;AACI,aAAKF,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BC,MAA1B,GAAmCA,MAAnC;AACA,aAAKF,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BG,OAA1B,CAAkCO,KAAlC,GAA0CT,MAA1C;AACH,KAtFI;;AAwFLU,sBAAkB,0BAAWb,GAAX,EAAgBE,GAAhB,EAAqBC,MAArB,EAClB;AACI,YAAIH,MAAM,KAAKxB,IAAL,GAAY,CAAtB,EACA,KAAKsC,iBAAL,CAAwBd,MAAM,CAA9B,EAAiCE,GAAjC,EAAsCC,MAAtC;AACA,YAAIH,MAAM,CAAV,EACA,KAAKc,iBAAL,CAAwBd,MAAM,CAA9B,EAAiCE,GAAjC,EAAsCC,MAAtC;AACA,YAAID,MAAM,KAAK1B,IAAL,GAAY,CAAtB,EACA,KAAKsC,iBAAL,CAAwBd,GAAxB,EAA6BE,MAAM,CAAnC,EAAsCC,MAAtC;AACA,YAAID,MAAM,CAAV,EACA,KAAKY,iBAAL,CAAwBd,GAAxB,EAA6BE,MAAM,CAAnC,EAAsCC,MAAtC;AACH,KAlGI;;AAoGLW,uBAAmB,2BAAWd,GAAX,EAAgBE,GAAhB,EAAqBC,MAArB,EACnB;AACI,YAAI,KAAKF,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAA9B,EACI;AACJ,YAAI,KAAKH,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BC,MAA1B,CAAiCY,MAAjC,CAAwCZ,MAAxC,CAAJ,EAAqD;AACjD,iBAAKF,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAA1B,GAAoC,IAApC;AACA,iBAAKS,gBAAL,CAAuBb,GAAvB,EAA4BE,GAA5B,EAAiCC,MAAjC;AACH;AACJ,KA5GI;;AA8GLa,iBAAa,uBACb;AACI,aAAK,IAAIhB,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC,EAA0C;AACtC,iBAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAM,KAAK1B,IAA7B,EAAmC0B,KAAnC,EAA0C;AACtC,oBAAI,CAAE,KAAKD,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAAhC,EAAyC;AACrC,2BAAO,KAAP;AACH;AACJ;AACJ;AACD,eAAO,IAAP;AACH,KAxHI;;AA0HLa,WAAO,eAASd,MAAT,EAAiBe,OAAjB,EACP;AACI,YAAI,KAAK7B,QAAT,EACI;AACJ,YAAI8B,aAAa,KAAKlB,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBE,MAAvC;AACA,YAAI,CAAEe,OAAF,IAAaf,UAAUgB,UAA3B,EACI;AACJ,aAAK5B,KAAL;;AAEA,aAAK,IAAIS,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC;AACI,iBAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAM,KAAK1B,IAA7B,EAAmC0B,KAAnC,EACA;AACI,oBAAI,KAAKD,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAA9B,EACC;AACG,yBAAKO,aAAL,CAAoBX,GAApB,EAAyBE,GAAzB,EAA8BC,MAA9B;AACF;AACL;AAPL,SAQA,KAAK,IAAIH,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC;AACI,iBAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAM,KAAK1B,IAA7B,EAAmC0B,KAAnC;AACI,oBAAI,KAAKD,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAA9B,EACA;AACI,yBAAKS,gBAAL,CAAuBb,GAAvB,EAA4BE,GAA5B,EAAiCC,MAAjC;AACH;AAJL;AADJ,SAMA,IAAI,KAAKa,WAAL,EAAJ,EAAyB;AACrB,iBAAK3B,QAAL,GAAgB,IAAhB;AACA,gBAAI,KAAKE,KAAL,IAAc,KAAK6B,SAAvB,EAAkC;AAC9BhE,mBAAGiE,GAAH,CAAQ,UAAR;AACH,aAFD,MAEO;AACHjE,mBAAGiE,GAAH,CAAQ,oBAAR;AACH;AACJ,SAPD,MAOO,IAAI,KAAK9B,KAAL,IAAc,KAAK6B,SAAvB,EAAkC;AACrChE,eAAGiE,GAAH,CAAQ,WAAR;AACH;AACJ,KA3JI;;AA6JLlC,kBAAc,wBACd;AACI,aAAKI,KAAL,GAAa,CAAC,CAAd;AACA,aAAKF,QAAL,GAAgB,KAAhB;AACA,aAAK,IAAIW,MAAM,CAAf,EAAkBA,MAAM,KAAKxB,IAA7B,EAAmCwB,KAAnC,EAA0C;AACtC,iBAAK,IAAIE,MAAM,CAAf,EAAkBA,MAAM,KAAK1B,IAA7B,EAAmC0B,KAAnC,EACA;AACI,oBAAIC,SAAS,KAAKG,aAAL,EAAb;AACA,qBAAKL,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BC,MAA1B,GAAmCA,MAAnC;AACA,qBAAKX,WAAL,CAAiBQ,GAAjB,EAAsBE,GAAtB,IAA6BC,MAA7B;AACA,oBAAImB,OAAO,KAAKC,iBAAL,CAAuBvB,GAAvB,EAA4BE,GAA5B,EAAiCF,GAAjC,EAAsCG,MAAtC,CAAX;AACA,qBAAKF,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BG,OAA1B,GAAoCiB,IAApC;AACA,qBAAKrB,UAAL,CAAgBD,GAAhB,EAAqBE,GAArB,EAA0BE,OAA1B,GAAoC,KAApC;AACH;AACJ;AACD,aAAKH,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBG,OAAtB,GAAgC,IAAhC;AACA,aAAKa,KAAL,CAAY,KAAKhB,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBE,MAAlC,EAA0C,IAA1C;AACA;AACH,KA/KI;;AAiLLqB,mBAAe,yBACf;AACI,aAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,KAAKjD,IAAxB,EAA8BiD,GAA9B;AACI,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,KAAKD,CAApB,EAAuBC,GAAvB,EACA;AACI,oBAAIC,OAAOF,IAAGC,CAAH,GAAO,CAAlB;AACA,qBAAK1C,UAAL;AACA,qBAAKuC,iBAAL,CAAuBE,CAAvB,EAA0BC,CAA1B,EAA6BD,IAAGC,CAAH,GAAO,CAApC;AACH;AANL,SAOA,KAAI,IAAID,IAAI,CAAZ,EAAeA,IAAI,KAAKjD,IAAxB,EAA8BiD,GAA9B;AACI,iBAAI,IAAIC,IAAID,CAAZ,EAAeC,IAAI,KAAKlD,IAAxB,EAA8BkD,GAA9B,EACA;AACI,oBAAIC,OAAO,KAAKnD,IAAL,GAAWkD,CAAX,GAAeD,CAA1B;AACA,qBAAKzC,UAAL;AACA,qBAAKuC,iBAAL,CAAuBE,CAAvB,EAA0BC,CAA1B,EAA6B,KAAKlD,IAAL,GAAYkD,CAAZ,GAAgBD,CAA7C;AACH;AANL;AAOH,KAjMI;;AAmMLF,uBAAmB,2BAASE,CAAT,EAAYC,CAAZ,EAAeC,IAAf,EAAqBC,SAArB,EAAgC;;AAE/C,YAAIC,UAAUzE,GAAG0E,WAAH,CAAe,KAAKrE,WAApB,CAAd;AACA,YAAImD,QAAQiB,QAAQjB,KAApB;AACAiB,gBAAQjB,KAAR,GAAgBgB,SAAhB;AACA,aAAKG,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA,YAAII,YAAYJ,QAAQK,KAAxB;;AAEA,YAAIC,UAAU,CAAC,KAAKlE,MAAL,CAAYiE,KAAZ,GAAoBD,YAAY,KAAKzD,IAAtC,IAA+C,CAA7D;AACA,YAAI4D,UAAU,CAAC,KAAKnE,MAAL,CAAYY,MAAZ,GAAqBoD,YAAY,KAAKzD,IAAvC,IAAgD,CAA9D;;AAEA,YAAI6D,IAAKJ,YAAYN,IAAZ,GAAmB,KAAK1D,MAAL,CAAYiE,KAAZ,GAAoB,CAAvC,GAA2CD,YAAY,CAAvD,GAA2DE,OAApE;AACA,YAAIG,OAAO,CAAC,KAAKtD,UAAL,GAAmB,KAAKA,UAAL,GAAkB,KAAKR,IAA3C,IAAoD,KAAKA,IAApE;AACA,YAAII,IAAK,KAAKX,MAAL,CAAYY,MAAZ,GAAqB,CAArB,GAAyBoD,YAAYP,CAArC,GAAyCO,YAAY,CAArD,GAA0DG,OAA1D,GAAoE,EAA7E;AACA,YAAIG,MAAMnF,GAAGoF,EAAH,CAAOH,CAAP,EAAWzD,CAAX,CAAV;AACAiD,gBAAQY,WAAR,CAAoBF,GAApB;;AAEAV,gBAAQa,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA;AACA,eAAOd,OAAP;AACH,KAxNI;;AA0NLe,kBAAc,wBAAW;;AAErB,YAAI,KAAK5D,UAAL,IAAmB,KAAKC,aAA5B,EAA2C;AACvC;AACH;;AAED,YAAI4C,UAAUzE,GAAG0E,WAAH,CAAe,KAAKrE,WAApB,CAAd;AACA,aAAKsE,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;;AAEAA,gBAAQY,WAAR,CAAoB,KAAKI,kBAAL,CAAwBhB,QAAQK,KAAhC,CAApB;AACA;AACAL,gBAAQa,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA,aAAK5D,YAAL,GAAoB,KAAKjB,eAAL,GAAuB0C,KAAKE,MAAL,MAAiB,KAAK7C,eAAL,GAAuB,KAAKC,eAA7C,CAA3C;AACA,aAAKgB,KAAL,GAAa,CAAb;AACA,aAAKE,UAAL;AACH,KAzOI;;AA2OL6D,wBAAoB,4BAAUZ,SAAV,EAAqB;AACrC,YAAIE,UAAU,CAAC,KAAKlE,MAAL,CAAYiE,KAAZ,GAAoBD,YAAY,KAAKhD,aAAjB,GAAiC,KAAKT,IAA3D,IAAoE,CAAlF;AACA,YAAI4D,UAAU,CAAC,KAAKnE,MAAL,CAAYY,MAAZ,GAAqBoD,YAAY,KAAKhD,aAAjB,GAAiC,KAAKT,IAA5D,IAAqE,CAAnF;AACA,YAAI6D,IAAKJ,aAAa,KAAKjD,UAAL,GAAkB,KAAKR,IAApC,IAA4C,KAAKP,MAAL,CAAYiE,KAAZ,GAAoB,CAAhE,GAAoED,YAAY,CAAhF,GAAoFE,OAA7F;AACA,YAAIG,OAAO,CAAC,KAAKtD,UAAL,GAAmB,KAAKA,UAAL,GAAkB,KAAKR,IAA3C,IAAoD,KAAKA,IAApE;AACA,YAAII,IAAK,KAAKX,MAAL,CAAYY,MAAZ,GAAqB,CAArB,GAAyBoD,YAAYa,SAAS,KAAK9D,UAAL,GAAkB,KAAKR,IAAhC,CAArC,GAA6EyD,YAAY,CAAzF,GAA8FG,OAAvG;AACA,eAAOhF,GAAGoF,EAAH,CAAOH,CAAP,EAAWzD,CAAX,CAAP;AACH,KAlPI;;AAoPLmE,YAAQ,gBAAUC,EAAV,EAAc;;AAElB;AACA;AACA;AACA;AACA;AACA,aAAKlE,KAAL,IAAckE,EAAd;AACH,KA5PI;;AA8PLC,iBAAa,uBAAY;AACrB,aAAK9E,YAAL,CAAkB+E,MAAlB,GAA2B,KAAK3D,KAAL,GAAa,KAAb,GAAqB,KAAKD,WAArD;AACH,KAhQI;;AAkQL6D,eAAW,qBAAY;AACnB;AACA;AACA;AACH,KAtQI;;AAwQLC,cAAU,oBAAY;AAClB,aAAKlF,MAAL,CAAYmF,cAAZ;AACAjG,WAAGkG,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AA3QI,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        floodPrefab: {\n            default: null,\n            type: cc.Prefab\n        },        \n        maxStarDuration: 0,\n        minStarDuration: 0,        \n        ground: {\n            default: null,\n            type: cc.Node\n        }, \n        canvas: {\n            default: null,\n            type: cc.Node\n        },        \n        player: {\n            default: null,\n            type: cc.Node\n        },       \n        move_display: {\n            default: null,\n            type: cc.Label\n        },       \n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        spawnInterval: 0,\n        rows: 0,\n        colours:[]\n    },\n\n    onLoad: function () {\n        \n        this.groundY = this.ground.y + this.ground.height/2;        \n        this.timer = 0;\n        this.starDuration = 0;   \n        this.spawnCount = 0;\n        this.numberToSpawn = this.rows * this.rows;\n        \n        this.initialize();\n        this.create_table();\n        \n        this.score = 0;\n    },\n\n    initialize: function()\n    {\n        this.finished = false;\n        this.limit_moves = 18;\n        this.moves = 0;\n        this.start_table = {};\n\n        this.colours = [cc.Color.BLUE, cc.Color.RED,cc.Color.GREEN,cc.Color.YELLOW,cc.Color.ORANGE,cc.Color.MAGENTA];\n        for (var row = 0; row < this.rows; row++) {            \n            this.start_table[row] = {};            \n        }  \n\n        this.game_table = {};\n        for (var row = 0; row < this.rows; row++) {\n            this.game_table[row] = {};\n            for (var col = 0; col < this.rows; col++) {\n                this.game_table[row][col] = {\n                    colour: null,\n                    flooded: false,\n                    element: null\n                };\n            }\n        }\n        \n    },\n\n    random_colour: function  ()\n    {        \n        var colour_no = Math.floor (Math.random () * 6);\n        return this.colours[colour_no];\n    },    \n\n    flood_element: function (row, col, colour)\n    {\n        this.game_table[row][col].colour = colour;\n        this.game_table[row][col].element.color = colour;\n    },\n\n    flood_neighbours: function  (row, col, colour)\n    {\n        if (row < this.rows - 1)\n        this.test_colour_flood (row + 1, col, colour);\n        if (row > 0)\n        this.test_colour_flood (row - 1, col, colour);\n        if (col < this.rows - 1)\n        this.test_colour_flood (row, col + 1, colour);\n        if (col > 0)\n        this.test_colour_flood (row, col - 1, colour);\n    },\n\n    test_colour_flood: function  (row, col, colour)\n    {\n        if (this.game_table[row][col].flooded)\n            return;\n        if (this.game_table[row][col].colour.equals(colour)) {\n            this.game_table[row][col].flooded = true;\n            this.flood_neighbours (row, col, colour);\n        }\n    },\n\n    all_flooded: function  ()\n    {\n        for (var row = 0; row < this.rows; row++) {\n            for (var col = 0; col < this.rows; col++) {\n                if (! this.game_table[row][col].flooded) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    },\n\n    flood: function(colour, initial)\n    {\n        if (this.finished)\n            return;\n        var old_colour = this.game_table[0][0].colour;\n        if (! initial && colour == old_colour)\n            return;\n        this.moves++;        \n        \n        for (var row = 0; row < this.rows; row++) \n            for (var col = 0; col < this.rows; col++) \n            {\n                if (this.game_table[row][col].flooded)\n                 {\n                    this.flood_element (row, col, colour);                    \n                 } \n            }      \n        for (var row = 0; row < this.rows; row++)\n            for (var col = 0; col < this.rows; col++)\n                if (this.game_table[row][col].flooded)\n                {\n                    this.flood_neighbours (row, col, colour);\n                }    \n        if (this.all_flooded ()) {\n            this.finished = true;\n            if (this.moves <= this.max_moves) {\n                cc.log (\"You win.\");\n            } else {\n                cc.log (\"Finished, at last!\");\n            }\n        } else if (this.moves == this.max_moves) {\n            cc.log (\"You lost.\");\n        }\n    },\n\n    create_table: function()\n    {\n        this.moves = -1;\n        this.finished = false;        \n        for (var row = 0; row < this.rows; row++) {            \n            for (var col = 0; col < this.rows; col++) \n            {        \n                var colour = this.random_colour();\n                this.game_table[row][col].colour = colour;\n                this.start_table[row][col] = colour;\n                var star = this.spawnNewStarByNum(row, col, row, colour);                \n                this.game_table[row][col].element = star;\n                this.game_table[row][col].flooded = false;\n            }\n        }\n        this.game_table[0][0].flooded = true;\n        this.flood (this.game_table[0][0].colour, true);\n        // append_text (get_by_id(\"max-moves\"), max_moves);\n    },\n\n    spawnAllStars: function()\n    {         \n        for(var i = 0; i < this.rows; i++)\n            for(var j = 0; j <= i; j++)\n            {                 \n                var inum = i -j + 1;\n                this.spawnCount++;\n                this.spawnNewStarByNum(i, j, i -j + 1);                \n            }\n        for(var i = 1; i < this.rows; i++)\n            for(var j = i; j < this.rows; j++)\n            {   \n                var inum = this.rows -j + i;     \n                this.spawnCount++; \n                this.spawnNewStarByNum(i, j, this.rows - j + i);              \n            }\n    },\n\n    spawnNewStarByNum: function(i, j, inum, newcolour) {\n              \n        var newStar = cc.instantiate(this.floodPrefab);\n        var color = newStar.color;                \n        newStar.color = newcolour;\n        this.node.addChild(newStar); \n        var starWidth = newStar.width;\n        \n        var marginX = (this.canvas.width - starWidth * this.rows ) / 2;\n        var marginy = (this.canvas.height - starWidth * this.rows ) / 2;              \n\n        var x =  starWidth * inum - this.canvas.width / 2 + starWidth / 2 + marginX;\n        var ynum = (this.spawnCount - (this.spawnCount % this.rows)) * this.rows;\n        var y =  this.canvas.height / 2 - starWidth * j - starWidth / 2  - marginy + 50;\n        var pos = cc.v2( x , y);\n        newStar.setPosition(pos);       \n        \n        newStar.getComponent('Star').game = this;\n        // this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        // this.timer = 0; \n        return newStar;   \n    },\n\n    spawnNewStar: function() {\n\n        if (this.spawnCount >= this.numberToSpawn) {\n            return;\n        }\n       \n        var newStar = cc.instantiate(this.floodPrefab);\n        this.node.addChild(newStar);\n        \n        newStar.setPosition(this.getNewStarPosition(newStar.width));\n        //newStar.setPosition(cc.v2(newStar.getPosition().x + newStar.node.width * i, 0));        \n        newStar.getComponent('Star').game = this;        \n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n        this.spawnCount++;\n    },\n\n    getNewStarPosition: function (starWidth) {\n        var marginX = (this.canvas.width - starWidth * this.numberToSpawn / this.rows ) / 2;\n        var marginy = (this.canvas.height - starWidth * this.numberToSpawn / this.rows ) / 2;\n        var x =  starWidth * (this.spawnCount % this.rows) - this.canvas.width / 2 + starWidth / 2 + marginX;\n        var ynum = (this.spawnCount - (this.spawnCount % this.rows)) * this.rows;\n        var y =  this.canvas.height / 2 - starWidth * parseInt(this.spawnCount / this.rows) - starWidth / 2  - marginy;\n        return cc.v2( x , y);\n    },\n\n    update: function (dt) {\n        \n        // if (this.timer > this.starDuration) {\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n        this.timer += dt;\n    },\n\n    updateMoves: function () {                \n        this.move_display.string = this.moves + \" / \" + this.limit_moves; \n    },\n\n    gainScore: function () {\n        // this.score += 1;        \n        // this.scoreDisplay.string = this.score;        \n        // cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); \n        cc.director.loadScene('game');\n    }\n});\n"]}