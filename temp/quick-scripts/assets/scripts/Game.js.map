{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","canvas","player","scoreDisplay","Label","scoreAudio","AudioClip","numberToSpawn","spawnInterval","rows","colours","onLoad","groundY","y","height","timer","starDuration","spawnCount","initialize","create_table","start_table","split","row","game_table","col","random_colour","colour_no","Math","floor","random","log","moves","finished","spawnAllStars","i","j","inum","spawnNewStarByNum","newStar","instantiate","node","addChild","starWidth","width","marginX","marginy","x","ynum","pos","v2","setPosition","getComponent","game","spawnNewStar","getNewStarPosition","parseInt","update","dt","gainScore","score","string","audioEngine","playEffect","gameOver","stopAllActions","director","loadScene"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },        \n        maxStarDuration: 0,\n        minStarDuration: 0,        \n        ground: {\n            default: null,\n            type: cc.Node\n        }, \n        canvas: {\n            default: null,\n            type: cc.Node\n        },        \n        player: {\n            default: null,\n            type: cc.Node\n        },       \n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },        \n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        numberToSpawn: 0,\n        spawnInterval: 0,\n        rows: 0,\n        colours:[]\n    },\n\n    onLoad: function () {\n        \n        this.groundY = this.ground.y + this.ground.height/2;        \n        this.timer = 0;\n        this.starDuration = 0;   \n        this.spawnCount = 0;\n        // this.schedule(this.spawnNewStar, this.spawnInterval);\n        // this.spawnNewStar();\n        \n        this.initialize();\n        this.create_table();\n        // this.spawnAllStars();\n        // this.score = 0;\n    },\n\n    initialize: function()\n    {\n        this.start_table = {};\n        this.colours = \"blue red green yellow pink purple\".split (/\\s+/);   \n        for (var row = 0; row < this.rows; row++) {            \n            this.start_table[row] = {};            \n        }  \n\n        this.game_table = {};\n        for (var row = 0; row < this.rows; row++) {\n            this.game_table[row] = {};\n            for (var col = 0; col < this.rows; col++) {\n                this.game_table[row][col] = \"\";\n            }\n        }\n        \n    },\n\n    random_colour: function  ()\n    {        \n        var colour_no = Math.floor (Math.random () * 6);\n        cc.log(this.colours[colour_no]);\n        return this.colours[colour_no];\n    },\n\n    create_table: function()\n    {\n        this.moves = -1;\n        this.finished = false;        \n        for (var row = 0; row < this.rows; row++) {            \n            for (var col = 0; col < this.rows; col++) {        \n                       \n                // game_table[row][col].colour = colour;\n                this.start_table[row][col] = this.random_colour();\n                // game_table[row][col].element = td;\n                // game_table[row][col].flooded = false;\n            }\n        }\n        // game_table[0][0].flooded = true;\n        // flood (game_table[0][0].colour, true);\n        // append_text (get_by_id(\"max-moves\"), max_moves);\n    },\n\n    spawnAllStars: function()\n    {         \n        for(var i = 0; i < this.rows; i++)\n            for(var j = 0; j <= i; j++)\n            {                 \n                var inum = i -j + 1;                \n            }\n        for(var i = 1; i < this.rows; i++)\n            for(var j = i; j < this.rows; j++)\n            {   \n                var inum = this.rows -j + i;               \n            }\n    },\n\n    spawnNewStarByNum: function(i, j, inum) {\n              \n        var newStar = cc.instantiate(this.starPrefab);\n        this.node.addChild(newStar); \n        var starWidth = newStar.width;\n        \n        var marginX = (this.canvas.width - starWidth * this.rows ) / 2;\n        var marginy = (this.canvas.height - starWidth * this.rows ) / 2;              \n\n        var x =  starWidth * inum - this.canvas.width / 2 + starWidth / 2 + marginX;\n        var ynum = (this.spawnCount - (this.spawnCount % this.rows)) * this.rows;\n        var y =  this.canvas.height / 2 - starWidth * j - starWidth / 2  - marginy;\n        var pos = cc.v2( x , y);\n        newStar.setPosition(pos);   \n\n        newStar.getComponent('Star').game = this; \n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;    \n    },\n\n    spawnNewStar: function() {\n\n        if (this.spawnCount >= this.numberToSpawn) {\n            return;\n        }\n       \n        var newStar = cc.instantiate(this.starPrefab);\n        this.node.addChild(newStar);\n        \n        newStar.setPosition(this.getNewStarPosition(newStar.width));\n        //newStar.setPosition(cc.v2(newStar.getPosition().x + newStar.node.width * i, 0));        \n        newStar.getComponent('Star').game = this;        \n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n        this.spawnCount++;\n    },\n\n    getNewStarPosition: function (starWidth) {\n        var marginX = (this.canvas.width - starWidth * this.numberToSpawn / this.rows ) / 2;\n        var marginy = (this.canvas.height - starWidth * this.numberToSpawn / this.rows ) / 2;\n        var x =  starWidth * (this.spawnCount % this.rows) - this.canvas.width / 2 + starWidth / 2 + marginX;\n        var ynum = (this.spawnCount - (this.spawnCount % this.rows)) * this.rows;\n        var y =  this.canvas.height / 2 - starWidth * parseInt(this.spawnCount / this.rows) - starWidth / 2  - marginy;\n        return cc.v2( x , y);\n    },\n\n    update: function (dt) {\n        \n        // if (this.timer > this.starDuration) {\n        //     this.gameOver();\n        //     this.enabled = false;   // disable gameOver logic to avoid load scene repeatedly\n        //     return;\n        // }\n        this.timer += dt;\n    },\n\n    gainScore: function () {\n        this.score += 1;        \n        this.scoreDisplay.string = 'Score: ' + this.score;        \n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function () {\n        this.player.stopAllActions(); \n        cc.director.loadScene('game');\n    }\n});\n"]}